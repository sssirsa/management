service: management-catalogues-restrictionreason

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 512MB
  timeout: 10
  role:
    Fn::ImportValue: management-${opt:stage,'dev'}-IamRoleLambdaExecution
  apiGateway:
    restApiId:
      Fn::ImportValue: management-${opt:stage,'dev'}-RestApiId
    restApiRootResourceId:
      Fn::ImportValue: management-${opt:stage,'dev'}-RootResourceId
# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    includeModules:
      # enable auto-packing of external modules
      packagePath: '../../package.json' 
plugins:
  #adding the plugin to be able to run offline emulation
  - serverless-offline 
  - serverless-webpack
  - serverless-plugin-warmup   
package:
  include:
  - /../../node_modules
functions:
  restrictionr-create:
    warmup: true
    handler: RestrictionReasonHandler.create
    events:
      - http:
          path: restrictionreason/
          method: post
          cors: true  
  restrictionr-getAll:
    warmup: true
    handler: RestrictionReasonHandler.getAll
    events:
      - http:
          path: restrictionreason/ 
          method: get
          cors: true
  restrictionr-getOne:
    warmup: true
    handler: RestrictionReasonHandler.getOne
    events:
      - http:
          path: restrictionreason/{id} 
          method: get
          cors: true           
  restrictionr-Update:
    warmup: true
    handler: RestrictionReasonHandler.update        
    events:
      - http:
          path: restrictionreason/{id} 
          method: put
          cors: true       